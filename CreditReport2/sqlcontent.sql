SELECT ACCOUNTLIST_V1.ACCOUNTNAME, ACCOUNTLIST_V1.CREDITLIMIT as CreditLimit, ACCOUNTLIST_V1.INTERESTRATE as InterestRate
    , ROUND( ACCOUNTLIST_V1.INITIALBAL + total(transactions.TRANSAMOUNT), 2) as Balance
    , ROUND( (ACCOUNTLIST_V1.INITIALBAL + total(transactions.TRANSAMOUNT))*c.BASECONVRATE, 2) as BaseBal
	, ACCOUNTLIST_V1.CREDITLIMIT + ROUND( (ACCOUNTLIST_V1.INITIALBAL + total(transactions.TRANSAMOUNT))*c.BASECONVRATE, 2) as AvailableCredit
FROM
	(
		SELECT
			CHECKINGACCOUNT_V1.ACCOUNTID, CHECKINGACCOUNT_V1.TRANSDATE, CHECKINGACCOUNT_V1.STATUS, 
			(case when CHECKINGACCOUNT_V1.TRANSCODE='Deposit' then TRANSAMOUNT else -TRANSAMOUNT end) as TRANSAMOUNT
		FROM
			CHECKINGACCOUNT_V1
		UNION ALL
		SELECT
			CHECKINGACCOUNT_V1.TOACCOUNTID as ACCOUNTID, CHECKINGACCOUNT_V1.TRANSDATE, CHECKINGACCOUNT_V1.STATUS, CHECKINGACCOUNT_V1.TRANSAMOUNT
		FROM
			CHECKINGACCOUNT_V1
		WHERE
			CHECKINGACCOUNT_V1.TRANSCODE = 'Transfer'
	) as transactions
INNER JOIN ACCOUNTLIST_V1 on ACCOUNTLIST_V1.ACCOUNTID = transactions.ACCOUNTID
INNER JOIN CURRENCYFORMATS_V1 as c on ACCOUNTLIST_V1.CURRENCYID=c.CURRENCYID
WHERE
	transactions.STATUS NOT IN ('V','D')
AND ACCOUNTLIST_V1.ACCOUNTTYPE = "Credit Card"
AND ACCOUNTLIST_V1.STATUS <> "Closed"
GROUP BY ACCOUNTLIST_V1.ACCOUNTID
ORDER BY ACCOUNTLIST_V1.INTERESTRATE DESC